#Public IP Check
/tool fetch url="http://hq.sonoslibra.com/" mode=http dst-path=newIP.txt

#Check CurrentIP.txt exists
:if ([:len [/file find name=currentIP.txt]] = 0) do={
/tool fetch url="http://hq.sonoslibra.com/" mode=http dst-path=currentIP.txt
}

#Compare New and Existing IP addresses
:local currentIP [file get currentIP.txt contents];
:local newIP [file get newIP.txt contents];

#If different run update script
:if ($newIP != $currentIP) do={

#Log and Save new IP
:log info message="New Pubilc IP: $newIP"
/file set currentIP.txt contents=$newIP

# Define variables
:local apiToken "G3afN0_d8SM2nOOneu2KlrgO1j7sXB8j2LhwhY-C"
:local zoneId "99b45096ed0908a2216d066429fc2fb9"
:local recordID "79e287776ea742f6df0d16cd5073f6cc"
:local hostname "hq.sonoslibra.com"
:local ipAddress "$newIP"

# Validate variables
:if (($apiToken = "") || ($zoneID = "") || ($recordID = "") || ($hostname = "") || ($ipAddress = "")) do={
    :log error "One or more variables are not set. Please configure the API token, Zone ID, Record ID, Hostname, and IP address."
    :error "Script terminated due to missing variables."
}

# Set the API endpoint
:local url ("https://api.cloudflare.com/client/v4/zones/" . $zoneID . "/dns_records/" . $recordID)

:log info $url


# Prepare JSON payload
:local json "{\
\"type\": \"A\", \
\"name\": \"$hostname\", \
\"content\": \"$ipAddress\", \
\"ttl\": 3600, \
\"proxied\": false\
}"

# Send the request
/tool fetch url=$url http-method=put http-header-field="Authorization: Bearer $apiToken,Content-Type: application/json" http-data="$json" output=user

}



zone
99b45096ed0908a2216d066429fc2fb9

read
2rw3jb8ihhTe_02sn6aA4NL0ojMnJdfhsxI8bt0y

edit
nCNfNSzur1RaxWK1Op8CxVMIyrX9pDspIqa0WPUX

record
226d26d5ac341e03c8c128d919d78046

/tool/fetch url="https://api.cloudflare.com/client/v4/zones/99b45096ed0908a2216d066429fc2fb9/dns_records" http-header-field="Authorization: Bearer 2rw3jb8ihhTe_02sn6aA4NL0ojMnJdfhsxI8bt0y" http-method=get output=user